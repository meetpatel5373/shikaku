<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Shikaku Puzzle</title>
    <link rel="stylesheet" href="/css/styles.css" />
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f2f2f2;
        color: #333;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      h1 {
        color: #2c3e50;
      }

      input,
      button {
        padding: 8px;
        margin: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }

      button {
        background-color: #3498db;
        color: white;
        cursor: pointer;
      }

      button:hover {
        background-color: #2980b9;
      }

      #board {
        display: grid;
        gap: 2px;
        margin-top: 20px;
        border: 2px solid #ccc;
        position: relative;
      }

      .cell {
        width: 40px;
        height: 40px;
        background-color: #fff;
        border: 1px solid #ccc;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 14px;
      }

      .rectangle-box {
        position: absolute;
        display: grid;
        border: 2px solid #000;
        cursor: move;
        opacity: 0.9;
        font-size: 12px;
        font-weight: bold;
        align-items: center;
        justify-items: center;
        color: #000;
      }

      #board-info {
        margin-top: 10px;
      }
    </style>
  </head>
  <body>
    <h1>Shikaku Puzzle</h1>

    <div>
      <label>Width: <input type="number" id="width" value="5" /></label>
      <label>Height: <input type="number" id="height" value="5" /></label>
      <button onclick="createBoard()">Create Board</button>
    </div>

    <div id="board-info"></div>
    <div id="board"></div>

    <script>
      let boardId = null;
      const CELL_SIZE = 40;

      async function createBoard() {
        const width = document.getElementById("width").value;
        const height = document.getElementById("height").value;
        const res = await fetch("/board", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ width, height }),
        });
        const data = await res.json();
        boardId = data.boardId;
        document.getElementById(
          "board-info"
        ).innerText = `Board created: ${boardId}`;

        const board = document.getElementById("board");
        board.style.gridTemplateColumns = `repeat(${width}, ${CELL_SIZE}px)`;
        board.style.gridTemplateRows = `repeat(${height}, ${CELL_SIZE}px)`;
        board.style.width = `${width * CELL_SIZE}px`;
        board.style.height = `${height * CELL_SIZE}px`;
        board.innerHTML = "";

        for (let i = 0; i < width * height; i++) {
          const cell = document.createElement("div");
          cell.className = "cell";
          board.appendChild(cell);
        }

        generateRectangles();
      }

      function createRectangleElement(rect, index) {
        const rectDiv = document.createElement("div");
        rectDiv.className = "rectangle-box";
        rectDiv.style.width = `${rect.width * CELL_SIZE}px`;
        rectDiv.style.height = `${rect.height * CELL_SIZE}px`;
        rectDiv.style.backgroundColor = `hsl(${(index * 60) % 360}, 70%, 80%)`;
        rectDiv.style.left = `${rect.x * CELL_SIZE}px`;
        rectDiv.style.top = `${rect.y * CELL_SIZE}px`;
        rectDiv.dataset.id = rect._id;
        rectDiv.innerText = rect._id.slice(-2);

        makeDraggable(rectDiv, rect._id, rect.width, rect.height);
        return rectDiv;
      }

      function makeDraggable(element, rectId, width, height) {
        let offsetX, offsetY;

        element.onmousedown = function (e) {
          offsetX = e.offsetX;
          offsetY = e.offsetY;
          document.onmousemove = function (e) {
            element.style.left = `${e.pageX - board.offsetLeft - offsetX}px`;
            element.style.top = `${e.pageY - board.offsetTop - offsetY}px`;
          };

          document.onmouseup = async function (e) {
            document.onmousemove = null;
            document.onmouseup = null;

            const board = document.getElementById("board");
            const newX = Math.floor((e.pageX - board.offsetLeft) / CELL_SIZE);
            const newY = Math.floor((e.pageY - board.offsetTop) / CELL_SIZE);

            const snapRes = await fetch(`/board/${boardId}/snap`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({
                rectangleId: rectId,
                x: newX,
                y: newY,
              }),
            });
            const snapData = await snapRes.json();

            element.style.left = `${newX * CELL_SIZE}px`;
            element.style.top = `${newY * CELL_SIZE}px`;

            const checkRes = await fetch(`/board/${boardId}/check`);
            const checkData = await checkRes.json();
            if (checkData.isWin) {
              alert("You solved the puzzle!");
            }

            alert(snapData.message);
          };
        };
      }

      async function generateRectangles() {
        const res = await fetch(`/board/${boardId}/rectangles`, {
          method: "POST",
        });
        const data = await res.json();

        const board = document.getElementById("board");

        data.rectangles.forEach((r, index) => {
          const rectElement = createRectangleElement(r, index);
          board.appendChild(rectElement);
        });
      }
    </script>
  </body>
</html>
